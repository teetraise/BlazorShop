@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime

<div class="page" data-theme="@currentTheme">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <div class="theme-switcher">
                <button class="theme-toggle" @onclick="ToggleTheme">
                    @if (currentTheme == "light")
                    {
                        <i class="fas fa-moon"></i>
                        @("Темная тема")
                    }
                    else
                    {
                        <i class="fas fa-sun"></i>
                        @("Светлая тема")
                    }
                </button>
            </div>
            <a href="https://docs.microsoft.com/aspnet/" target="_blank">О проекте</a>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private string currentTheme = "light";

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                var savedTheme = await JSRuntime.InvokeAsync<string>("eval",
                    "typeof(Storage) !== 'undefined' ? localStorage.getItem('theme') : null");

                if (!string.IsNullOrEmpty(savedTheme))
                {
                    currentTheme = savedTheme;
                    StateHasChanged();
                }
            }
            catch
            {
                // Если localStorage недоступен, используем тему по умолчанию
            }
        }
    }

    private async Task ToggleTheme()
    {
        currentTheme = currentTheme == "light" ? "dark" : "light";

        try
        {
            await JSRuntime.InvokeVoidAsync("eval",
                $"typeof(Storage) !== 'undefined' && localStorage.setItem('theme', '{currentTheme}')");
        }
        catch
        {
            // Игнорируем ошибки localStorage
        }

        StateHasChanged();
    }
}